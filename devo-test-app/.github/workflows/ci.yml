name: TestDevoApp CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-scenario: [normal, warning, failure]
    
    steps:
    - name: 🔍 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'devo-test-app/package.json'
    
    - name: 📦 Install Dependencies
      working-directory: ./devo-test-app
      run: |
        npm ci
        echo "Dependencies installed successfully"
    
    - name: 🧪 Run Tests (Normal Scenario)
      if: matrix.test-scenario == 'normal'
      working-directory: ./devo-test-app
      run: |
        echo "✅ Running normal test scenario"
        npm test
        echo "All tests passed successfully"
    
    - name: ⚠️ Run Tests (Warning Scenario)
      if: matrix.test-scenario == 'warning'
      working-directory: ./devo-test-app
      run: |
        echo "⚠️  Running warning test scenario"
        # This will show warnings but not fail
        npm test
        echo "WARNING: This scenario demonstrates warning logs for Devo collection"
      continue-on-error: false
    
    - name: ❌ Run Tests (Failure Scenario)
      if: matrix.test-scenario == 'failure'
      working-directory: ./devo-test-app
      env:
        TRIGGER_FAIL: true
      run: |
        echo "❌ Running failure test scenario"
        echo "This test is designed to fail for Devo log collection testing"
        npm test || echo "Expected failure occurred"
      continue-on-error: true
    
    - name: 🏗️ Build Application
      if: matrix.test-scenario != 'failure'
      working-directory: ./devo-test-app
      run: |
        echo "🏗️  Building Next.js application"
        npm run build
        echo "Build completed successfully"
    
    - name: 🔍 Lint Code
      working-directory: ./devo-test-app
      run: |
        echo "🔍 Running ESLint"
        npm run lint || echo "Linting completed with warnings"
    
    - name: 📊 Generate Test Report
      if: always()
      working-directory: ./devo-test-app
      run: |
        echo "📊 Test Scenario: ${{ matrix.test-scenario }}"
        echo "🚀 Workflow Run ID: ${{ github.run_id }}"
        echo "📋 Repository: ${{ github.repository }}"
        echo "🌟 Commit SHA: ${{ github.sha }}"
        echo "👤 Actor: ${{ github.actor }}"
        
        # Create log file for Devo collection
        mkdir -p logs
        cat > logs/test-report-${{ matrix.test-scenario }}.json << EOF
        {
          "scenario": "${{ matrix.test-scenario }}",
          "run_id": "${{ github.run_id }}",
          "repository": "${{ github.repository }}",
          "commit_sha": "${{ github.sha }}",
          "actor": "${{ github.actor }}",
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "status": "${{ job.status }}"
        }
        EOF
    
    - name: ⬆️ Upload Test Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs-${{ matrix.test-scenario }}
        path: devo-test-app/logs/
        retention-days: 30

  # Dedicated job for intentional failures
  trigger-devo-collection:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[trigger-fail]') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 🔍 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'devo-test-app/package.json'
    
    - name: 📦 Install Dependencies
      working-directory: ./devo-test-app
      run: npm ci
    
    - name: ❌ Intentional Failure for Devo
      working-directory: ./devo-test-app
      env:
        INTENTIONAL_FAIL: true
        TRIGGER_FAIL: true
      run: |
        echo "❌ INTENTIONAL FAILURE JOB"
        echo "This job is designed to fail for Devo log collection testing"
        echo "Run ID: ${{ github.run_id }}"
        echo "Repository: ${{ github.repository }}"
        
        # Run tests that will intentionally fail
        npm test
        
        # This should not be reached due to test failure
        echo "❌ ERROR: Tests should have failed but didn't"
        exit 1
    
    - name: 🚨 Failure Notification
      if: failure()
      run: |
        echo "🚨 EXPECTED FAILURE OCCURRED"
        echo "🔗 This failure can be collected by Devo using:"
        echo "📊 Run ID: ${{ github.run_id }}"
        echo "📋 Repository: ${{ github.repository }}"
        echo "📝 Use the ci_cd_collector.py to fetch these logs"

  # Summary job
  summary:
    runs-on: ubuntu-latest
    needs: [test-and-build]
    if: always()
    
    steps:
    - name: 📋 Workflow Summary
      run: |
        echo "📋 TestDevoApp CI/CD Pipeline Summary"
        echo "🏃 Jobs completed: ${{ needs.test-and-build.result }}"
        echo "🔗 This workflow provides logs for Devo collection"
        echo "📊 Use GitHub API to fetch logs with run ID: ${{ github.run_id }}"
        echo ""
        echo "🔧 To trigger intentional failures, include '[trigger-fail]' in commit message"
        echo "📝 Devo Collector Usage:"
        echo "   Repository: ${{ github.repository }}"
        echo "   Run ID: ${{ github.run_id }}"
